class AsDict:
    """
    Dict and Attributes Class.

    Examples:

        .. code-block:: python

            json = jsonpickle.encode(col)
            obj = jsonpickle.decode(obj)
            col.to_file(name=col.col_name)
            assert (Path.cwd() / f'{col.col_name}.json').is_file()
            col.to_file(directory=tmpdir, name=col.col_name, regenerate=True)
            obj = col.from_file(directory=tmpdir, name=col.col_name)
            assert obj == col
    """
    __ignore_attr__: list = ...
    @property
    def asdict(self) -> dict: ...
    @property
    def attrs(self) -> list: ...
    def attrs_get(self, *args: Any, default: Any = ...) -> dict: ...
    def attrs_set(self, *args: Any, **kwargs: Any) -> None: ...
    @classmethod
    def defaults(cls, nested: bool = ...) -> dict: ...
    def from_file(self, directory: Any =..., name: str = ..., keys: bool = ...): ...
    @property
    def keys(self) -> list: ...
    @property
    def kwargs(self) -> dict: ...
    @property
    def kwargs_dict(self) -> dict: ...
    @property
    def public(self) -> dict: ...
    def to_file(self, directory: Any = ..., name: str = ..., regenerate: bool = ..., **kwargs: Any) -> None: ...
    def to_json(self, regenerate: bool = ..., indent: bool = ..., keys: bool = ...,
                max_depth: int = ...) -> JSONEncoder: ...
    def to_obj(self, keys: bool = True): ...
    @property
    def values(self) -> list: ...
    @property
    def values_dict(self) -> list: ...
