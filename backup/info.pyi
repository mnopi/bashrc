class info:
    __slots__: tuple[str, ...] = ...
    __ignore_attr__: tuple[str, ...] = ...
    __ignore_copy__: tuple[Type, ...] = ...
    __ignore_kwarg__: tuple[str, ...] = ...
    __ignore_str__: tuple[Type, ...] = ...
    _data: Any
    _depth: Optional[int]
    _ignore: bool
    _key: Attr
    def __init__(self,
                 data: Any,
                 depth: Optional[int] = ...,
                 ignore: bool = ...,
                 key: Attr = ...) -> None:...
    def __call__(self,
                 depth: Optional[int] = ...,
                 ignore: bool = ...,
                 key: Attr = ...) -> info:...
    def annotations(self, stack: Union[FrameType, int] = ...) -> Union[dict[str, Annotation]: ...]:...
    def asdict(self, count: int = ..., defaults: bool = ...) -> Any:...
    def attr_value(self, name: str, default: Any = ...):...
    @property
    def attrs(self) -> list[str]:...
    @property
    def attrs_cls(self) -> list[str]:...
    @property
    def cls(self) -> Cls:...
    @property
    def data(self) -> Type:...
    @data.setter
    def data(self, value: Any) -> None:...
    @data.deleter
    def data(self) -> None:...
    @property
    def defaults(self) -> dict[str, Any]: ...
    @property
    def depth(self) -> Optional[int]:...
    @depth.setter
    def depth(self, value: Optional[int]) -> None:...
    @depth.deleter
    def depth(self) -> None:...
    @property
    def dir(self) -> set[str]:...
    def es(self, data: Any = ...) -> Es:...
    def has_attr(self, name: str) -> bool:...
    def has_method(self, name: str) -> bool:...
    @property
    def has_reduce(self) -> bool:...
    @property
    def hash(self) -> int:...
    @property
    def ignore(self) -> bool:...
    @ignore.setter
    def ignore(self, value: bool) -> None:...
    @ignore.deleter
    def ignore(self) -> None:...
    @property
    def ignore_attr(self):...
    def _include_attr(self, name: str, exclude: SeqUnion = ...) -> bool:...
    def _include_exclude(self, data: Any, key: bool = ...) -> bool:...
    def include(self, key: Any = ..., data: Any = ...) -> Optional[tuple]:...
    @property
    def initvarsdict(self) -> dict[str, Any]:...
    def is_attr(self, name: str) -> bool:...
    def is_coro(self, name: str) -> bool:...
    def is_coro_pproperty(self, name: str) -> bool:...
    def is_coro_property(self, name: str) -> bool:...
    @property
    def key(self) -> Attr:...
    @key.setter
    def key(self, value: Attr) -> None:...
    @key.deleter
    def key(self) -> None:...
    @property
    def keys(self) -> list[str]:...
    @property
    def kwargs(self) -> dict[str, Any]:...
    @property
    def kwargs_dict(self) -> dict[str, Any]:...
    @property
    def module(self) -> ModuleType:...
    @property
    def public(self) -> dict[str, Any]: ...
    @property
    def repr(self) -> str: ...
    def to_json(self, regenerate: bool = ..., indent: bool = ..., keys: bool = ...,
                max_depth: int = ...) -> JSONEncoder: ...
    def to_obj(self, keys: bool = ...) -> Any: ...
    @property
    def values(self) -> list: ...
    @property
    def values_dict(self) -> list: ...
    @property
    def vars(self) -> dict[str, Any]: ...
